apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    meta.helm.sh/release-name: apigo
    meta.helm.sh/release-namespace: apigo-dev
  labels:
    app.kubernetes.io/instance: apigo
    app.kubernetes.io/name: apigo
  name: apigo-deployment
  namespace: apigo-dev
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: apigo
      app.kubernetes.io/name: apigo
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: apigo
        app.kubernetes.io/name: apigo
    spec:
      containers:
      - env:
        - name: ENVIRONMENT
          value: dev
        - name: PROJECT_NAME
          value: apigo
        imagePullPolicy: Always
        name: apigo
        ports:
        - containerPort: 8081
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      # - env:
      #   image: gvalkov/tailon
      #   command: ["ta"]
      #   imagePullPolicy: Always
      #   name: apigo
      #   ports:
      #   - containerPort: 8080
      #     protocol: TCP
      #   resources: {}
      #   terminationMessagePath: /dev/termination-log
      #   terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30